name: docker-push

on:
  workflow_dispatch:

permissions:
  packages: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # 确保完整拉取仓库文件，包括 pnpm-lock.yaml

      # 验证 pnpm-lock.yaml 是否存在（调试用，可保留）
      - name: Verify pnpm-lock.yaml exists
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            echo "pnpm-lock.yaml found"
            cat pnpm-lock.yaml | head -n 5  # 显示文件前5行确认内容
          else
            echo "ERROR: pnpm-lock.yaml not found"
            exit 1
          fi

      - name: Set up Node.js 22.10.0
        uses: actions/setup-node@v4
        with:
          node-version: '22.10.0'
          cache: 'npm'

      - name: Install pnpm globally via npm
        run: |
          npm install -g pnpm@latest
          pnpm --version

      # 核心修复：如果锁定文件存在则用 frozen-lockfile，否则不强制（兼容首次构建）
      - name: Install frontend dependencies with pnpm
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install  # 首次构建无锁定文件时使用普通安装
          fi

      - name: Run type check and build frontend
        run: |
          pnpm run type-check
          pnpm run build

      - name: Read version from file
        id: read_version
        run: echo "APP_VERSION=$(cut -d '|' -f 2 ./service/assets/version)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository owner
        id: lowercase
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            NODE_VERSION=22.10.0
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.owner }}/sun-panel-v2:${{ env.APP_VERSION }}
            ghcr.io/${{ steps.lowercase.outputs.owner }}/sun-panel-v2:latest
